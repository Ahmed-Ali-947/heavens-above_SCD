{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"manual/","title":"User Manual \u2014 Heavens Above Automation Project","text":""},{"location":"manual/#overview","title":"Overview","text":"<p>The Heavens Above Automation Project demonstrates GitHub Actions automations for the software lifecycle: - Continuous Integration (tests + lint) - Continuous Deployment (Vercel) - Scheduled maintenance tasks - Automated dependency updates (Dependabot) - Code review and security scanning (ESLint + CodeQL) - Documentation build &amp; deployment (MkDocs \u2192 GitHub Pages)</p>"},{"location":"manual/#getting-started","title":"Getting started","text":""},{"location":"manual/#1-clone-the-repository","title":"1. Clone the repository","text":"<pre><code>git clone https://github.com/&lt;your-username&gt;/heavens-above_SCD.git\ncd heavens-above_SCD\n</code></pre>"},{"location":"manual/#2-install-dependencies","title":"2. Install dependencies","text":"<pre><code>npm install\n</code></pre>"},{"location":"manual/#3-run-tests-and-lint","title":"3. Run tests and lint","text":"<pre><code>npm test\nnpm run lint\n</code></pre>"},{"location":"manual/#4-run-the-application-if-applicable","title":"4. Run the application (if applicable)","text":"<p>If the project has an entry point, start it with:</p> <pre><code>node src/app.js\n</code></pre>"},{"location":"manual/#documentation","title":"Documentation","text":""},{"location":"manual/#local-preview-mkdocs","title":"Local preview (MkDocs)","text":"<p>If you have Python and MkDocs installed:</p> <pre><code>pip install mkdocs mkdocs-material\nmkdocs serve\n</code></pre> <p>Open http://127.0.0.1:8000 to preview.</p>"},{"location":"manual/#live-site","title":"Live site","text":"<p>Documentation is published to GitHub Pages automatically. Visit:</p> <pre><code>https://&lt;your-username&gt;.github.io/heavens-above_SCD/\n</code></pre>"},{"location":"manual/#workflows-quick-summary","title":"Workflows (quick summary)","text":"<p>CI: .github/workflows/ci.yml Runs on push and pull_request to main. Executes npm ci, npm run lint, and npm test.</p> <p>CD (Vercel): .github/workflows/deploy.yml Deploys to Vercel on pushes to main using secrets: VERCEL_TOKEN, VERCEL_PROJECT_ID, VERCEL_ORG_ID.</p> <p>Scheduled tasks: .github/workflows/scheduled-tasks.yml Runs a maintenance script daily and uploads logs as artifacts.</p> <p>Dependabot: .github/dependabot.yml Schedules dependency checks weekly and opens PRs for updates.</p> <p>Code review: .github/workflows/code-review.yml Runs ESLint, CodeQL, and optional Reviewdog on PRs for inline feedback and security scanning.</p> <p>Docs: .github/workflows/documentation.yml Builds documentation with MkDocs and publishes to GitHub Pages (gh-pages branch).</p>"},{"location":"manual/#artifacts-logs","title":"Artifacts &amp; Logs","text":"<p>The workflows upload useful artifacts to Actions runs:</p> <p>CI: test coverage, test reports (if configured)</p> <p>Scheduled tasks: logs/maintenance.log \u2192 uploaded as maintenance-logs artifact</p> <p>Documentation: built site/ uploaded as documentation-site artifact</p> <p>Deployment: deployment logs available in the workflow run / Vercel dashboard</p> <p>To download artifacts:</p> <p>Open the workflow run in GitHub \u2192 Actions.</p> <p>Scroll to the bottom of the run page.</p> <p>Under Artifacts, click the artifact name to download.</p>"},{"location":"manual/#troubleshooting","title":"Troubleshooting","text":"<p>npm ci fails Ensure package-lock.json exists. Run npm install locally and commit package-lock.json.</p> <p>Lint errors in CI Run npm run lint locally to see and fix errors. Use npx eslint . --fix to auto-fix simple problems.</p> <p>Docs not published Verify GitHub Pages is set to deploy from the gh-pages branch (Settings \u2192 Pages) and that the documentation.yml workflow completed successfully.</p> <p>Vercel deploy fails Check repository Secrets (Settings \u2192 Secrets \u2192 Actions) for VERCEL_TOKEN, VERCEL_PROJECT_ID, and VERCEL_ORG_ID.</p>"},{"location":"manual/#support","title":"Support","text":"<p>If you encounter issues:</p> <p>Open a GitHub issue in this repository.</p> <p>Include workflow run URLs and attached artifacts (logs, screenshots).</p>"},{"location":"manual/#license","title":"License","text":"<p>This project is distributed under the MIT License.</p>"},{"location":"workflow/","title":"Workflow Overview \u2013 Heavens Above Automation","text":""},{"location":"workflow/#continuous-integration-ci","title":"Continuous Integration (CI)","text":"<ul> <li>File: <code>.github/workflows/ci.yml</code></li> <li>Trigger: On every push or pull request to <code>main</code>.</li> <li>Purpose: Runs linting, unit tests, and reports errors early.</li> <li>Evidence: GitHub Actions log with test pass/fail status.</li> </ul>"},{"location":"workflow/#continuous-deployment-cd","title":"Continuous Deployment (CD)","text":"<ul> <li>File: <code>.github/workflows/deploy.yml</code></li> <li>Trigger: On every successful push to <code>main</code>.</li> <li>Purpose: Deploys the app automatically to Vercel.</li> <li>Secrets Used: <code>VERCEL_TOKEN</code>, <code>VERCEL_PROJECT_ID</code>, <code>VERCEL_ORG_ID</code>.</li> </ul>"},{"location":"workflow/#scheduled-maintenance","title":"Scheduled Maintenance","text":"<ul> <li>File: <code>.github/workflows/scheduled-tasks.yml</code></li> <li>Trigger: Runs daily using cron (<code>0 0 * * *</code>).</li> <li>Purpose: Performs cleanup and writes logs automatically.</li> <li>Output: <code>logs/maintenance.log</code> uploaded as artifact.</li> </ul>"},{"location":"workflow/#dependency-updates","title":"Dependency Updates","text":"<ul> <li>File: <code>.github/dependabot.yml</code></li> <li>Trigger: Weekly on Sundays.</li> <li>Purpose: Creates PRs for outdated dependencies and runs CI to verify.</li> <li>Tool: GitHub Dependabot.</li> </ul>"},{"location":"workflow/#code-review-workflow","title":"Code Review Workflow","text":"<ul> <li>File: <code>.github/workflows/code-review.yml</code></li> <li>Trigger: On pull requests to main.</li> <li>Purpose: Checks coding standards (ESLint) and scans security vulnerabilities (CodeQL).</li> <li>Integration: Optional Reviewdog PR feedback.</li> <li>Result: Enforced PR checks before merging.</li> </ul>"},{"location":"workflow/#documentation-deployment","title":"Documentation Deployment","text":"<ul> <li>File: <code>.github/workflows/documentation.yml</code></li> <li>Trigger: When Markdown docs are updated (<code>docs/**</code> or <code>README.md</code>).</li> <li>Purpose: Builds documentation using MkDocs and deploys to GitHub Pages.</li> <li>URL: </li> </ul>"}]}